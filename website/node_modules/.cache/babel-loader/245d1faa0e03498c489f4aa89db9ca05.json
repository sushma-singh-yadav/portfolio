{"ast":null,"code":"var _jsxFileName = \"/Users/sushmayadav/Development/portfolio/website/src/app/admin/Layout.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { useLocation, Route, Switch } from 'react-router-dom';\nimport Sidebar from './shared/Sidebar';\nimport AdminNavbar from './shared/AdminNavbar';\nimport Footer from './shared/Footer';\nimport FixedPlugin from './shared/FixedPlugin';\nimport '../../admin-assets/css/light-bootstrap-dashboard-react.css';\nimport \"../../admin-assets/css/animate.min.css\";\nimport \"../../admin-assets/css/demo.css\";\nimport routes from \"./routes.js\";\nimport sidebarImage from \"../../admin-assets/img/sidebar-3.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [image, setImage] = React.useState(sidebarImage);\n  const [color, setColor] = React.useState(\"black\");\n  const [hasImage, setHasImage] = React.useState(true);\n  const location = useLocation();\n  const mainPanel = React.useRef(null);\n\n  const getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: prop.layout + prop.path,\n          render: props => /*#__PURE__*/_jsxDEV(prop.component, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 44\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this);\n      } else {\n        return null;\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainPanel.current.scrollTop = 0;\n\n    if (window.innerWidth < 993 && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      var element = document.getElementById(\"bodyClick\");\n      element.parentNode.removeChild(element);\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        color: color,\n        image: hasImage ? image : \"\",\n        routes: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-panel\",\n        ref: mainPanel,\n        children: [/*#__PURE__*/_jsxDEV(AdminNavbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: getRoutes(routes)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FixedPlugin, {\n      hasImage: hasImage,\n      setHasImage: () => setHasImage(!hasImage),\n      color: color,\n      setColor: color => setColor(color),\n      image: image,\n      setImage: image => setImage(image)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Layout, \"8Io6BEb+e7Ppy4Yj6kddgd2HR7U=\", false, function () {\n  return [useLocation];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/sushmayadav/Development/portfolio/website/src/app/admin/Layout.js"],"names":["React","Component","useState","useLocation","Route","Switch","Sidebar","AdminNavbar","Footer","FixedPlugin","routes","sidebarImage","Layout","image","setImage","color","setColor","hasImage","setHasImage","location","mainPanel","useRef","getRoutes","map","prop","key","layout","path","props","useEffect","document","documentElement","scrollTop","scrollingElement","current","window","innerWidth","className","indexOf","classList","toggle","element","getElementById","parentNode","removeChild"],"mappings":"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","sourcesContent":["import React ,{Component , useState} from 'react';\r\nimport {useLocation, Route,Switch} from 'react-router-dom';\r\nimport Sidebar from './shared/Sidebar';\r\nimport AdminNavbar from './shared/AdminNavbar';\r\nimport Footer from './shared/Footer';\r\nimport FixedPlugin from './shared/FixedPlugin';\r\nimport '../../admin-assets/css/light-bootstrap-dashboard-react.css';\r\nimport \"../../admin-assets/css/animate.min.css\";\r\nimport \"../../admin-assets/css/demo.css\";\r\n\r\nimport routes from \"./routes.js\";\r\n\r\nimport sidebarImage from \"../../admin-assets/img/sidebar-3.jpg\";\r\n\r\nfunction Layout(){\r\n    const [image, setImage] = React.useState(sidebarImage);\r\n    const [color, setColor] = React.useState(\"black\");\r\n    const [hasImage, setHasImage] = React.useState(true);\r\n    const location = useLocation();\r\n    const mainPanel = React.useRef(null);\r\n    const getRoutes = (routes) => {\r\n        return routes.map((prop, key) => {\r\n            if (prop.layout === \"/admin\") {\r\n                return (\r\n                    <Route\r\n                        path={prop.layout + prop.path}\r\n                        render={(props) => <prop.component {...props} />}\r\n                        key={key}\r\n                    />\r\n                );\r\n            } else {\r\n                return null;\r\n            }\r\n        });\r\n    };\r\n    React.useEffect(() => {\r\n        document.documentElement.scrollTop = 0;\r\n        document.scrollingElement.scrollTop = 0;\r\n        mainPanel.current.scrollTop = 0;\r\n        if (\r\n            window.innerWidth < 993 &&\r\n            document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n        ) {\r\n            document.documentElement.classList.toggle(\"nav-open\");\r\n            var element = document.getElementById(\"bodyClick\");\r\n            element.parentNode.removeChild(element);\r\n        }\r\n    }, [location]);\r\n    return (\r\n        <>\r\n            <div className=\"wrapper\">\r\n                <Sidebar color={color} image={hasImage ? image : \"\"} routes={routes} />\r\n                <div className=\"main-panel\" ref={mainPanel}>\r\n                    <AdminNavbar />\r\n                    <div className=\"content\">\r\n                        <Switch>{getRoutes(routes)}</Switch>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n            <FixedPlugin\r\n                hasImage={hasImage}\r\n                setHasImage={() => setHasImage(!hasImage)}\r\n                color={color}\r\n                setColor={(color) => setColor(color)}\r\n                image={image}\r\n                setImage={(image) => setImage(image)}\r\n            />\r\n        </>\r\n    )\r\n}\r\nexport default Layout;"]},"metadata":{},"sourceType":"module"}